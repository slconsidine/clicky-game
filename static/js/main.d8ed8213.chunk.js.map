{"version":3,"sources":["components/ElfCard/index.js","App.js","index.js"],"names":["ElfCard","props","className","onClick","chosenElf","id","alt","name","src","image","App","state","images","score","topScore","chosen","newPick","newTopScore","console","log","setState","checkGame","length","alert","i","includes","filter","concat","shuffledPosts","j","Math","floor","random","temp","shuffleArray","this","map","key","class","Component","ReactDOM","render","document","getElementById"],"mappings":"u3FAceA,MAVf,SAAiBC,GACb,OACI,qCAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,UAAUH,EAAMI,MAA3D,YAA0E,UACtE,yBAAKH,UAAU,mCACX,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,iBCwGlCC,E,4MA/FbC,MAAQ,CACNC,SACAC,MAAO,EACPC,SAAU,EACVC,OAAQ,GACRC,QAAS,I,EAIXC,YAAc,WACR,EAAKN,MAAME,MAAQ,EAAKF,MAAMG,SAChCI,QAAQC,IAAI,uBAEZ,EAAKC,SAAS,CAAEN,SAAU,EAAKH,MAAMG,SAAW,K,EAIpDO,UAAY,SAACL,GAGX,GAFAE,QAAQC,IAAIH,GAER,EAAKL,MAAMC,OAAOU,OAAS,IAAM,EAAKX,MAAME,MAC9CK,QAAQC,IAAI,UACZI,MAAM,6BACN,EAAKH,SAAS,CAAEP,MAAO,IACvB,EAAKO,SAAS,CAAEL,OAAQ,UAGxB,IAAK,IAAIS,EAAE,EAAGA,EAAER,EAAQM,OAAQE,IAC1B,EAAKb,MAAMI,OAAOU,SAAST,EAAQQ,KACrCN,QAAQC,IAAI,oCACZD,QAAQC,IAAI,sBAAwBH,EAAQQ,GAAGjB,KAAO,gBACtDgB,MAAM,sBAAD,OAAuBP,EAAQQ,GAAGjB,KAAlC,iBACL,EAAKa,SAAS,CAAEP,MAAO,IACvB,EAAKO,SAAS,CAAEL,OAAQ,OAExBG,QAAQC,IAAI,uBACZ,EAAKC,SAAS,CAAEP,MAAO,EAAKF,MAAME,MAAQ,IAC1C,EAAKI,gB,EAMbb,UAAY,SAAAC,GACV,IAAMW,EAAU,EAAKL,MAAMC,OAAOc,QAAO,SAAAjB,GAAK,OAAIA,EAAMJ,KAAOA,KAC/D,EAAKe,SAAS,CAAEJ,QAASA,IACzBE,QAAQC,IAAI,EAAKR,MAAMK,SACvB,EAAKI,UAAS,SAAAT,GAEZ,MAAO,CACLI,OAFaJ,EAAMI,OAAOY,OAAOhB,EAAMK,SAGvCA,QAAS,OAGbE,QAAQC,IAAI,EAAKR,MAAMI,QACvB,EAAKM,UAAUL,I,uDAGP,IAAD,OACDY,EAvEV,SAAsBhB,GAEpB,IADA,IAAIY,EAAIZ,EAAOU,OAAS,EAChBE,EAAI,EAAGA,IAAK,CAClB,IAAMK,EAAIC,KAAKC,MAAMD,KAAKE,UAAYR,EAAI,IACpCS,EAAOrB,EAAOY,GACpBZ,EAAOY,GAAKZ,EAAOiB,GACnBjB,EAAOiB,GAAKI,EAEd,OAAOrB,EA+DiBsB,CAAatB,GACnC,OACE,oCACA,yBAAKV,UAAU,yBACb,wBAAIG,GAAG,QAAP,mBACA,wBAAIA,GAAG,QAAP,qFACA,yBAAKH,UAAU,SAASG,GAAG,QACzB,6CAAmB8B,KAAKxB,MAAME,OAC9B,6CAAmBsB,KAAKxB,MAAMG,YAGlC,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,OACV0B,EAAcQ,KAAI,SAAA3B,GAAK,OACtB,kBAAC,EAAD,CACAP,UAAU,oBACVE,UAAW,EAAKA,UAChBC,GAAII,EAAMJ,GACVgC,IAAK5B,EAAMJ,GACXE,KAAME,EAAMF,KACZE,MAAOA,EAAMA,cAMvB,4BAAQ6B,MAAM,eACV,6CAAmBH,KAAKxB,MAAME,OAC9B,6CAAmBsB,KAAKxB,MAAMG,gB,GAzFtByB,aCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d8ed8213.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n\r\nfunction ElfCard(props) {\r\n    return (\r\n        <div className=\"card\" onClick={() => props.chosenElf(props.id)} className=\"remove\">\r\n            <div className=\"img-container text-align-center\">\r\n                <img alt={props.name} src={props.image}/>\r\n            </div>\r\n        </div>      \r\n    );\r\n}\r\n\r\nexport default ElfCard;","import React, { Component } from 'react';\nimport ElfCard from \"./components/ElfCard\";\nimport images from \"./images.json\";\nimport \"./style.css\";\n\nfunction shuffleArray(images) {\n  let i = images.length - 1;\n  for (i; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = images[i];\n    images[i] = images[j];\n    images[j] = temp;\n  }\n  return images;\n}\n\nclass App extends Component {\n  state = {\n    images,\n    score: 0,\n    topScore: 0,\n    chosen: [],\n    newPick: \"\"\n  };\n  \n\n  newTopScore = () => {\n    if (this.state.score < this.state.topScore) {\n      console.log(\"top score is higher\");\n    } else {\n      this.setState({ topScore: this.state.topScore + 1});\n    }\n  };\n\n  checkGame = (newPick) => {\n    console.log(newPick);\n    // checks if user has won game yet\n    if((this.state.images.length - 1)=== this.state.score) {\n      console.log(\"winner\")\n      alert(\"Congratulations! You win!\");\n      this.setState({ score: 0 });\n      this.setState({ chosen: [] });\n    } else {\n      // if they have not won the game: checks if their chosen pic has been selected already or not\n      for (var i=0; i<newPick.length; i++) {\n        if (this.state.chosen.includes(newPick[i])) {\n          console.log(\"character has already been added\");\n          console.log(\"You already picked \" + newPick[i].name + \". Try again!\");\n          alert(`You already picked ${newPick[i].name}. Try again!`)\n          this.setState({ score: 0 });\n          this.setState({ chosen: [] });\n        } else {\n          console.log(\"added new character\");\n          this.setState({ score: this.state.score + 1 });\n          this.newTopScore();\n        };\n      }\n    }\n  };\n  \n  chosenElf = id => {\n    const newPick = this.state.images.filter(image => image.id === id);\n    this.setState({ newPick: newPick });\n    console.log(this.state.newPick);\n    this.setState(state => {\n      const chosen = state.chosen.concat(state.newPick);\n      return {\n        chosen,\n        newPick: \"\"\n      }\n    });\n    console.log(this.state.chosen);\n    this.checkGame(newPick);\n  };\n\n  render() {\n    const shuffledPosts = shuffleArray(images);\n    return (\n      <>\n      <div className=\"jumbotron text-center\">\n        <h1 id=\"text\">Elf Memory Game</h1>\n        <h3 id=\"text\">Click on an image to earn points, but don't click on the same one more than once!</h3>\n        <div className=\"scores\" id=\"text\">\n          <span>Your Score: {this.state.score}</span>\n          <span>High Score: {this.state.topScore}</span>  \n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"row\">\n              {shuffledPosts.map(image => (\n                <ElfCard\n                className=\"col-xs-2 col-sm-3\"\n                chosenElf={this.chosenElf}\n                id={image.id}\n                key={image.id}\n                name={image.name}\n                image={image.image}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n      <footer class=\"text-center\">\n          <span>Your Score: {this.state.score}</span>\n          <span>High Score: {this.state.topScore}</span>  \n      </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\")\n);\n"],"sourceRoot":""}